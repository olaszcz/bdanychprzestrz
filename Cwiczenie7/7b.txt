1. Napisz procedurę wypisującą do konsoli ciąg Fibonacciego. Procedura musi przyjmować jako 
argument wejściowy liczbę n. Generowanie ciągu Fibonacciego musi zostać 
zaimplementowane jako osobna funkcja, wywoływana przez procedurę.


CREATE PROCEDURE C_FIB(@n int)
AS
BEGIN
	DECLARE @ciag TABLE(number int) /*DEFINIOWANIE TABELKI*/
	INSERT INTO @ciag VALUES(0),(1)
	DECLARE @w int, @i int  /*DEFINIOWANIE ZMIENNEJ DO DODANIA ORAZ NUMERU WYRAZU*/
	SET @i = 2 
	WHILE (@i < @n)/*WARUNEK LICZBA WYRAZÓW PODANA*/
	BEGIN 
		SELECT @w = SUM (number) FROM (SELECT TOP 2 number FROM @ciag ORDER BY number DESC) as T /*SUMA WYRAZÓW DWÓCH PIERWSZYCH REKORDÓW POSORTOWANYCH MALEJĄCO*/	
		INSERT INTO @ciag VALUES (@w) /*WSTAWIANIE NOWYCH WARTOŚCI DO TABLICY*/
		SET @i += 1/*KOLEJNY WYRAZ*/
	END	
	SELECT * FROM @ciag /*WYPISANIE*/
END

Exec C_FIB 15 /*WYPISANIE DLA 15 WYRAZÓW*/

2.Napisz trigger DML, który po wprowadzeniu danych do tabeli Persons zmodyfikuje nazwisko 
tak, aby było napisane dużymi literami. 

USE AdventureWorks2012
CREATE TRIGGER Uppername
        ON Person.Person
        AFTER INSERT, UPDATE /*URUCHOMIONY PO OPERACJI UPDATE(MODYFIKACJA) LUB INSERT(WSTAWIENIE)*/
AS
BEGIN
    UPDATE  Person.Person
    SET     LastName = UPPER(LastName)
END
 
3. Przygotuj trigger ‘taxRateMonitoring’, który wyświetli komunikat o błędzie, jeżeli nastąpi 
zmiana wartości w polu ‘TaxRate’ o więcej niż 30%.

USE AdventureWorks2012
CREATE TRIGGER SAL ON Sales.SalesTaxRate
FOR UPDATE
AS
DECLARE @sal_old SMALLMONEY, @sal_new SMALLMONEY, @id INT
SELECT @sal_old = TaxRate, @id = SalesTaxRateID FROM DELETED /* Tabela logiczna - rekordy ze stanem sprzed aktualizacji*/
SELECT @sal_new = TaxRate FROM INSERTED /*Tabela logiczna - rekordy z wartościami po aktualizacji*/
IF @sal_old * 1.3 < @sal_new
PRINT 'BŁĄD'
