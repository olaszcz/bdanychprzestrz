#!/bin/bash

#skrypt wykonuje operacje na pliku Customers_Nov2021.zip oraz porównuje go z plikiem Customers_old.csv, czego wynikiem jest lista nowych klientów oraz raport przesłany e-mailem. Data utworzenia skryptu : 21.12.2021r.

#zalogowanie zdarzeń:
mkdir -p ./PROCESSED
TIMESTAMP=`date +"%m%d%Y"`

exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1> PROCESSED/zadaniebazy_${TIMESTAMP}.log 2>&1

#pobieranie i rozpakowanie pliku 1a,b:
wget -q -O tmp.zip https://home.agh.edu.pl/~wsarlej/Customers_Nov2021.zip && unzip -P agh tmp.zip

#sprawdzanie poprawności pliku 1c:

NUMERINDEKSU=402687
N1="Customers_Nov2021.csv"

#ilosc linii na początku
IL=`sed 1d "$N1"| wc -l`


#utworzenie pliku z błedami:

wget https://home.agh.edu.pl/~wsarlej/Customers_old.csv
N2="Customers_old.csv"

#puste linie (numery) do pliku Customers_Nov2021.bad:
sed -n '/^$/=' "$N1" > Customers_Nov2021.bad_${TIMESTAMP}
N3="Customers_Nov2021.bad_${TIMESTAMP}"
#usuwanie pustych linii:
sed -i '/^$/d' "$N1"

#powtarzajace się linie:
grep -f "$N2" "$N1"|sed 1d >> "$N3"

#liczba duplikatów:
LD=`grep -f "$N2" "$N1"|sed 1d | wc -l`

#usuwanie powtarzających się wierszy w Customers_Nov2021.csv z Customers_old.csv i powstanie pliku wynikowego Customers_Nov2021k.csv
sed 1d "$N1"| comm -23 <(sort "$N1") <(sort "$N2") > Customers_Nov2021k.csv
N4="Customers_Nov2021k.csv"
LP=`sed 1d Customers_Nov2021k.csv| wc -l`

#utworzenie tabeli, jeśli nie istnieje:
psql -U postgres -d postgres -tc "CREATE TABLE IF NOT EXISTS public.CUSTOMERS_${NUMERINDEKSU} (first_name varchar(20), last_name varchar(20), email varchar(50), lat float, long float)"

#dane do tabeli:
psql -U postgres -d postgres -tc "\COPY public.CUSTOMERS_${NUMERINDEKSU} FROM './Customers_Nov2021k.csv' WITH (FORMAT csv)"

#przeniesienie danych do podkatalogu PROCESSED:
 
mv "$N4" PROCESSED/Customers_Nov2021${TIMESTAMP}_

#wysyłanie e-mail
#liczba wierszy w pliku Customers_Nov2021.csv
#powyżej IL
#, liczba wierszy w pliku po walidacji (Customers_Nov2021${TIMESTAMP}
#powyżej LP
#, liczba duplikatów,
#powyżej LD

#ilość danych załadowanych do tabeli:
DT=`psql -U postgres -d postgres -tc "select count(*) from information_schema.columns where table_name='customers_402687'"`


echo "$IL, $LP, $LD, $DT " | mail -s "CUSTOMERS LOAD-${TIMESTAMP}" osz0591@gmail.com 

#kwerenda SQL, imiona i nazwiska klientów mieszkających w promieniu 50 km od punktu:
psql -U postgres -d postgres -tc "SELECT first_name, last_name, ST_DistanceSpheroid(CAST(ST_SetSRID(ST_Point(lat,long), 4326) as geometry), CAST(ST_SetSRID(ST_Point(41.39988501005976, -75.6732976804034), 4326) as Geometry),'SPHEROID["WGS 84", 6378137, 298.257223553]')/1000 as ODLEGLOSC INTO BEST_CUSTOMERS_402687 FROM CUSTOMERS_402687 where ST_DistanceSpheroid(CAST(ST_SetSRID(ST_Point(lat,long), 4326) as geometry), CAST(ST_SetSRID(ST_Point(41.39988501005976, -75.67329768604034), 4326) as GEOMETRY), 'SPHEROID["WGS 84", 6378137, 298.257223563]')/1000<50"

#wyeksportuje zawartość tabeli BEST_CUSTOMERS_402687 do pliku csv:
psql -U postgres -d postgres -tc "\COPY public.BEST_CUSTOMERS_${NUMERINDEKSU} TO 'sphere.csv' DELIMITER ',' CSV HEADER"

#skompresuje wyeksportowany plik csv:
zip sphere.zip sphere.csv

#wyśle skompresowany plik do adresata:
# w  treści z data ostatnije modyfikacji:
d=`date -r /home/aleksandra/sphere.zip`
#ilośc wierszy:
i=`sed 1d /home/aleksandra/sphere.zip | wc -l`
echo "$d,$i" | mail -s "Data ostatniej modyfikacji pliku oraz liczba wierszy" osz0591@gmail.com -A /home/aleksandra/sphere.zip







